#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile
#
name: "Auto compile with openwrt sdk"
on:
  workflow_dispatch:

env:
  TZ: Asia/Jakarta
  radmon: ${{ github.repository }}


jobs:
  Get-Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: New Version
        id: version
        run: |
          echo "version=$(grep 'PKG_VERSION:=' ./luci-app-radius-monitor/Makefile |awk -F '=' '{print $2}')" >> $GITHUB_OUTPUT
          echo "New Version: $(grep 'PKG_VERSION:=' ./luci-app-radius-monitor/Makefile |awk -F '=' '{print $2}')"

          
  job_build_radmon:
    needs: Get-Version
    name: Build radmon [Luci ${{ matrix.luci_ver }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - sdk_ver: 23.05
            luci_ver: 23.05
            sdk_url: https://downloads.openwrt.org/releases/23.05.0/targets/x86/64/openwrt-sdk-23.05.0-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
    steps:
      - name: Install packages
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          echo "Install packages"
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Cache openwrt SDK
        id: cache-sdk
        uses: actions/cache@v4
        with:
          path: sdk
          key: openwrt-luci-${{ matrix.luci_ver }}-x86_64

      - name: Initialization environment
        run: |
          wget ${{ matrix.sdk_url }}
          file_name=$(echo ${{ matrix.sdk_url }} | awk -F/ '{print $NF}')
          mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
          cd sdk
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-${{ matrix.sdk_ver }}" > feeds.conf
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-${{ matrix.sdk_ver }}" >> feeds.conf
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-${{ matrix.luci_ver }}" >> feeds.conf
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-${{ matrix.sdk_ver }}"  >> feeds.conf
          echo "src-git radmon https://github.com/${{ env.radmon }}.git;${{ github.ref_name }}" >> feeds.conf
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_luci-app-radius-monitor=m" > .config
          ./scripts/feeds install -d n luci-app-radius-monitor
          make package/luci-app-radius-monitor/download -j8

      - name: Update radmon feeds
        run: |
          cd sdk
          sed -i '6s/main/${{ github.ref_name }}/' feeds.conf
          ./scripts/feeds update radmon
          ./scripts/feeds install luci-app-radius-monitor

      - name: Compile radmon
        id: compile
        run: |
          cd sdk
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-radius-monitor=m" >> .config
          make defconfig
          echo "make package/luci-app-radius-monitor/{clean,compile} -j$(nproc)"
          make package/luci-app-radius-monitor/{clean,compile} -j$(nproc)
          mv bin/packages/x86_64/radmon/ ../
          make clean
          rm .config .config.old
          rm -rf feeds/radmon feeds/radmon.*
          cd ../radmon
          for i in $(ls); do mv $i luci-${{ matrix.luci_ver }}_$i; done
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          mv ${{ env.FIRMWARE }}/radmon/luci-23.05_luci-app-radius-monitor_${{ needs.Get-Version.outputs.version }}_all.ipk ${{ env.FIRMWARE }}/radmon/luci-app-radius-monitor_${{ needs.Get-Version.outputs.version }}_all.ipk 

      - name: Upload radmon ipks to release
        uses: softprops/action-gh-release@master
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.Get-Version.outputs.version }}
          files: ${{ env.FIRMWARE }}/radmon/*.ipk
